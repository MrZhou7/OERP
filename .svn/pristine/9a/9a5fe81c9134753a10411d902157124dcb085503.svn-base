<template>
  <div class="roleWrap">
    <el-row>
      <el-col :span="6">
        <div class="category-tree-content">
          <el-input
            v-model="filterText"
            placeholder="输入关键字进行品类搜索">
          </el-input>
          <el-tree
            v-loading="loading"
            ref="tree2"
            :highlight-current="true"
            :data="dataTree"
            :props="defaultProps"
            :filter-node-method="filterNode"
            :load="loadNode"
            node-key="id"
            class="filter-tree"
            lazy
            @node-click="handleNodeClick"/>
        </div>
      </el-col>
      <el-col :span="18">
        <el-form ref="form" :model="form" label-width="100px">
          <el-row>
            <el-col :span="6">
              <el-form-item label="角色名称">
                <el-input v-model="form.role_name"></el-input>
              </el-form-item>
            </el-col>
            <el-col :span="6">
              <el-form-item>
                <el-button type="primary" @click="search">搜索</el-button>
              </el-form-item>
            </el-col>
          </el-row>
        </el-form>
        <div class="btn_bottom">
          <el-button type="primary" @click="addRole">新增角色</el-button>
        </div>
        <div class="contract_table">
          <el-table
            ref="table"
            :height="height"
            :data="tableData"
            :show-overflow-tooltip="true"
            border
            tooltip-effect="dark"
            style="width: 100%"
            @selection-change="getRadio"
            @row-click="clickRow">
            <el-table-column
              type="selection"
              width="55">
            </el-table-column>
            <el-table-column
              :show-overflow-tooltip="true"
              prop="dept_code"
              min-width="180"
              label="部门">
              <template slot-scope="scope">
                <span v-for="(item, index) in tableData" :key="index">
                  {{ scope.row.dept_code == item.dept_code ? item.content : '' }}
                </span>
              </template>
            </el-table-column>
            <el-table-column
              prop="role_name"
              min-width="180"
              label="角色名称">
            </el-table-column>
            <el-table-column
              prop="subject_code"
              min-width="180"
              label="角色描述">
            </el-table-column>
            <el-table-column
              fixed="right"
              label="操作"
              min-width="180">
              <template slot-scope="scope">
                <el-button type = "text" size="small" @click.native.prevent="checkRol(scope.$index, tableData)">查 看</el-button>
                <el-button type = "text" size="small" @click.native.prevent="editRol(scope.$index, tableData)">编 辑</el-button>
              </template>
            </el-table-column>
          </el-table>
          <el-pagination
            :page-sizes="[10, 20, 30, 40]"
            :page-size="10"
            :current-page.sync="currentPage"
            :total="total"
            background
            layout="prev, pager, next, total, sizes"
            @size-change="handleSizeChange"
            @current-change="pagination">
          </el-pagination>
        </div>
      </el-col>
    </el-row>
    <!--新增、编辑、查看角色-->
    <el-dialog
      :title="editTitle"
      :close-on-click-modal="false"
      :visible.sync="dialogVisible"
      top="1%"
      width="60%"
      @close="handleClose">
      <el-form ref="ruleForm" :model="ruleForm" :rules="rules" label-width="100px" class="demo-ruleForm">
        <blockquote class="elem_quote">基础信息</blockquote>
        <el-form-item label="角色名称" prop="role_name">
          <el-col :span="12">
            <el-input v-model="ruleForm.role_name"></el-input>
          </el-col>
        </el-form-item>
        <el-form-item label="角色描述" prop="subject_code">
          <el-col :span="12">
            <el-input v-model="ruleForm.subject_code" type="textarea" autosize ></el-input>
          </el-col>
        </el-form-item>
        <el-form-item label="门店名称" prop="mall_id">
          <el-col :span="12">
            <el-select v-model="ruleForm.mall_id" :disabled="disable" placeholder="请选择门店名称">
              <el-option v-for="item in mall_name" :label="item.mall_name" :value="item.mall_id" :key="item.mall_id"></el-option>
            </el-select>
          </el-col>
        </el-form-item>
        <blockquote class="elem_quote">权限配置</blockquote>
        <el-input
          v-model="filterTextRole"
          placeholder="输入关键字进行过滤">
        </el-input>
        <el-tree
          ref="tree"
          :props="defaultPropsRole"
          :filter-node-method="filterNode"
          :default-checked-keys="defaultCheckedKeys"
          :data="roleData"
          disabled
          class="author-tree"
          node-key="id"
          show-checkbox>
        </el-tree>
        <el-form-item style="text-align: right">
          <el-button v-show="isShowSubmit" type="primary" @click="submitForm('ruleForm')">保 存</el-button>
          <el-button v-show="isShowSave" type="primary" @click="saveForm('ruleForm')">保 存</el-button>
        </el-form-item>
      </el-form>
    </el-dialog>
  </div>
</template>

<script>
var data = {};
import { common } from '@/common/common';
import building from '@/utils/building';
export default {
  name: 'Role',
  data() {
    return {
      filterTextRole: '',
      ruleForm: {
        role_name: '', // 角色名称
        subject_code: '', // 角色描述
        district_id: '',
        menu: '',
        operate: '',
        mall_id: '', // 门店名称
        dept_code: ''
      },
      isShowSubmit: false, // 新增保存按鈕的显示隐藏
      isShowSave: false, // 编辑保存按鈕的显示隐藏
      defaultCheckedKeys: [], // 默认展开的数组
      defaultExpandedKeys: [], // 默认展开的节点
      roleData: [], // 权限信息
      mall_name: [], // 门店信息
      defaultPropsRole: {
        children: 'children',
        label: 'text'
      },
      rules: {
        role_name: [{ required: true, message: '请输入角色名称', trigger: 'blur' },{ min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }],
        subject_code: [{ required: true, message: '请输入角色描述', trigger: 'blur' },{ min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }],
        mall_id: [{ required: true, message: '请输入名店名称', trigger: 'blur' }]
      },
      form: {
        role_name: ''
      },
      disable: false,
      editTitle: '', // 弹窗的name
      depcode: '', // 传给子组件的dept_code
      filterText: '', // 查询过滤的初始值
      loading: false,
      total: 0,
      height: window.innerHeight - 275 + 'px',
      tableData: [],
      currentPage: 1, // 页码
      dialogVisible: false, // 新增角色弹窗
      dataTree: [], // 树状图显示数据
      defaultProps: {
        children: [],
        label: 'name',
        isLeaf: 'leaf'
      }
    };
  },
  watch: {
    filterText(val) {
      this.$refs.tree2.filter(val);
    },
    filterTextRole(val) {
      this.$refs.tree.filter(val);
    }
  },
  created() {
    this.getRole();
    building.Mall(this); // 先获取门店数据
    this.loading = true;
    // const userTreeData = common.get('userTreeData');
    // if (userTreeData != null) {
    //   this.dataTree = userTreeData;
    //   this.defaultExpandedKeys = [this.dataTree[0].id];
    //   this.loading = false;
    // } else {
    //   this.getUserTree();
    // }
    this.getUserTree();
  },
  methods: {
    filterNode(value, data) { // 组织架构的搜索查询
      if (!value) return true;
      return data.name.indexOf(value) !== -1;
    },
    // 异步树叶子节点懒加载逻辑
    loadNode(node, resolve) {
      const self = this;
      console.log(node);
      if (node.data.num == 0 && node.data.type == 'dev') {
        self.depCode = { dept_code: node.data.id };
        this.getUser(node);
      }
      // 一级节点处理
      if (node.level === 0) {
        this.getUserTree(resolve);
      }
      // 其余节点处理
      if (node.level >= 1) {
        // 注意！把resolve传到你自己的异步中去
        this.getTree(node, resolve);
      }
    },
    getTree(node, resolve) { // 获取tree信息个表格的查询及点击组织架构获取信息
      if (node.data.type == 'subcompany') {
        this.param = {
          company_id: 1,
          sub_parent_id: node.data.id
        };
      } else {
        this.param = {
          company_id: 1,
          sub_parent_id: node.parent.data.id,
          supdepid: node.data.id
        };
      }
      this.axios.post('http://10.1.2.168/v1/Organization/getSubList', this.param)
        .then(res => {
          console.log(res.data.data);
          // 此处需要后台传过来一个值来判断每个节点有无子节点,实际项目中必须加上（如isRealLeaf），不传都默认为叶子节点
          //  out.data.data.forEach(value => {
          //   if (value.isRealLeaf === 'Y') {
          //     value.leaf = true//不为叶子节点
          //   } else {
          //     value.leaf = false//为叶子节点
          //   }
          // })
          let data = res.data.data;
          resolve(data);
        });
    },
    getUserTree() { // 获取tree信息个表格的查询及点击组织架构获取信息
      this.axios.post('http://10.1.2.168/v1/Organization/getSubList', { company_id: 1, sub_parent_id: 0 }).then(res => {
        this.dataTree = res.data.data;
        console.log(this.dataTree)
        this.loading = false;
      }).catch(function(err) {
        this.$message.error(err.responseJSON.msg);
      });
    },
    handleNodeClick(node, data) { // 点击传参给用户信息，并显示用户信息
      // this.depcode = { dept_code: data.data.data.dept_code };
    },
    pagination(val) { // 分页功能
      data = this.form;
      data.page = val;
      common.getPreData(data, 'Role/roleList', this, 'roalSearch');
      common.set('roalSearch', data);
    },
    handleSizeChange(val) {
      const data = this.formInline;
      data.limit = val;
      common.getPreData(data, 'Role/roleList', this, 'roalSearch');
      common.set('roalSearch', { 'search': data });
    },
    search() { // 搜索
      if (this.form.role_name == '') {
        this.$message({ message: '角色名称不能为空', type: 'warning' });
      } else {
        data = this.form;
        common.getPreData(data, 'Role/roleList', this, 'roalSearch');
        common.set('roalSearch', data);
      }
    },
    addRole() { // 新增角色
      if (this.depcode == '') {
        this.$message({ message: '请先确认所属部门', type: 'warning' });
        this.editTitle = '新增角色信息';
        return false;
      }
      this.isShowSubmit = true;
      this.dialogVisible = true;
    },
    clickRow(row) { // 点击table当前行
      this.$refs.table.toggleRowSelection(row);
    },
    getRadio(row) { // 去除多选
      building.radioBtn(row, this.$refs.table);
    },
    checkRol(index, table) { // 查看
      this.dialogVisible = true;
      this.editTitle = '查看角色信息';
      this.$nextTick(() => {
        this.getRoleList(index, table);
      });
    },
    editRol(index, table) { // 编辑
      this.isShowSave = true;
      this.dialogVisible = true;
      this.disable = true;
      this.editTitle = '编辑角色信息';
      this.$nextTick(() => {
        this.getRoleList(index, table);
      });
    },
    getRoleList(index, table) { // 编辑和查看时获取的数据
      this.$refs.tree.setCheckedKeys([]);
      const that = this;
      this.axios({
        method: 'post',
        data: { role_id: table[index].role_id },
        url: process.env.BASE_API + 'Role/getInfo'
      }).then((res) => {
        that.ruleForm = res.data.data;
        that.defaultCheckedKeys = that.ruleForm.menu.concat(that.ruleForm.operate);
      }).catch(function(err) {
        that.$message.error(err.response.data.msg);
      });
    },
    getRole() { // 获取权限tree列表
      this.axios({
        method: 'post',
        url: process.env.BASE_API + 'Permission/PermissionListC'
      }).then((res) => {
        this.roleData = res.data.data;
      }).catch(function(err) {
        this.$message.error(err.response.data.msg);
      });
    },
    handleClose() { // 弹窗关闭
      // 清空弹窗内容
      this.$refs.ruleForm.resetFields();
      this.$refs.tree.setCheckedKeys([]);
      this.dialogVisible = false;
      this.disable = false;
      // 隐藏保存按钮
      this.isShowSave = false;
      this.isShowSubmit = false;
    },
    submitForm(formName) { // 新增保存
      let title = '新增角色成功';
      let url = 'Role/add';
      let that = this;
      this.$nextTick(() => {
        this.save(formName, url, title, that);
      });
    },
    saveForm(formName) { // 编辑保存
      let title = '修改角色成功';
      let url = 'Role/editRole';
      let that = this;
      this.$nextTick(() => {
        this.save(formName, url, title, that);
      });
    },
    save(formName, url, title, that) { // 保存
      that.$refs[formName].validate((valid) => {
        if (valid) {
          let res = that.$refs.tree.getCheckedNodes();
          let arr = [];
          res.forEach((item) => {
            arr.push(item.id);
          });
          let menu = '';
          let operate = '';
          for (var j = 0, len = arr.length; j < len; j++) {
            if (arr[j] < 10000) {
              menu += arr[j] + ',';
            } else {
              operate += arr[j] + ',';
            }
          }
          that.ruleForm.menu = menu.substr(0, menu.length - 1);
          that.ruleForm.operate = operate.substr(0, operate.length - 1);
          that.ruleForm.dept_code = this.depcode.dept_code;
          that.ruleForm.district_id = 1;
          that.axios({
            method: 'post',
            data: that.ruleForm,
            url: process.env.BASE_API + url
          }).then((res) => {
            if (res.status == 200) {
              that.form.dept_code = that.ruleForm.dept_code;
              data = that.form;
              common.getPreData(data, 'Role/roleList', that, 'roalSearch');
              common.set('roalSearch', data);
              that.dialogVisible = false;
              that.$message({ showClose: true, message: title, type: 'success' });
            }
          }).catch(function(err) {
            that.$message.error(err.response.data.msg);
          });
        } else {
          this.$message({
            message: '请输入完整信息！！！',
            type: 'warning'
          })
        }
      });
    }
  }
};
</script>

<style scoped lang="scss">
  .roleWrap{padding: 15px;}
  .filter-tree{overflow: auto;height:calc(100vh - 150px);}
  .author-tree{overflow: auto;height:calc(100vh - 60vh);}
  .category-tree-content{margin:10px;border: 1px solid #e2e2e2;}
</style>
