<template>
  <div>
    <el-row>
      <el-col :span="8">
        <div class="category-tree-content">
          <el-input
            v-model="filterText"
            placeholder="输入关键字进行品类搜索">
          </el-input>
          <el-tree
            v-loading="loading"
            ref="tree2"
            :highlight-current="true"
            :data="dataTree"
            :props="defaultProps"
            :expand-on-click-node="false"
            default-expand-all
            :filter-node-method="filterNode"
            class="filter-tree"
            @node-click="handleNodeClick">
            <span class="slot-t-node" slot-scope="{ node, data }">
              <i class="iconfont icon-renyuan" style="color: #009688;" />
              <span>{{ node.label }}</span>
            </span>
          </el-tree>
        </div>
      </el-col>
      <el-col :span="16">
        <div class="category-tree-content grid-content bg-purple-light">
          <el-form ref="formInline" :model="formInline" label-width="70px" class="demo-ruleForm">
            <el-row class="searchHearch">
              <el-col :span="6">
                <el-form-item label="产品编码">
                  <el-input v-model="formInline.sku" clearable/>
                </el-form-item>
              </el-col>
              <el-col :span="6">
                <el-form-item label="产品名称">
                  <el-input v-model="formInline.product_name" clearable/>
                </el-form-item>
              </el-col>
              <el-col :span="6">
                <el-form-item label="条码">
                  <el-input v-model="formInline.bar_code" clearable/>
                </el-form-item>
              </el-col>
              <el-col :span="6">
                <el-form-item label="是否打印">
                  <el-select v-model="formInline.is_default_print" clearable placeholder="请选择">
                    <el-option label="全部" value=""></el-option>
                    <el-option label="是" value="1"></el-option>
                    <el-option label="否" value="0"></el-option>
                  </el-select>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="6">
                <el-form-item label="是否有效">
                  <el-select v-model="formInline.enabled" clearable placeholder="请选择">
                    <el-option label="全部" value=""></el-option>
                    <el-option label="启用" value="1"></el-option>
                    <el-option label="停用" value="0"></el-option>
                  </el-select>
                </el-form-item>
              </el-col>
              <el-col :span="6">
                <el-form-item label="商铺编码">
                  <el-input v-model="formInline.store_code"/>
                </el-form-item>
              </el-col>
              <el-col :span="6">
                <el-form-item label="商铺">
                  <el-input v-model="formInline.store_name" suffix-icon="el-icon-search" clearable ref="getPayWayChang" @focus="fieldClick"></el-input>
                </el-form-item>
              </el-col>
              <el-col :span="6" align="center">
                <el-button align="center" type="primary" @click="onSecher">查询</el-button>
              </el-col>
            </el-row>
          </el-form>
          <div class="btn_bottom">
            <el-button @click="addCommodity" :disabled="addFalse">新增</el-button>
            <el-button @click="addDefault" :disabled="addFalse">新增默认商铺</el-button>
            <el-button @click="importCommodity" :disabled="addFalse">导入</el-button>
          </div>
          <el-table
            ref="multipleTable"
            :height="tableHeight"
            :data="tableData"
            :show-overflow-tooltip="true"
            border
            tooltip-effect="dark"
            style="width: 100%"
            @row-click="clickRow"
            @selection-change="changFun">
            <el-table-column
              type="selection"
              min-width="55"/>
            <el-table-column
              prop="product_name"
              :show-overflow-tooltip="true"
              label="产品名称"
              min-width="110">
            </el-table-column>
            <el-table-column
              prop="product_type_name"
              :show-overflow-tooltip="true"
              label="产品类型"  min-width="120">
            </el-table-column>
            <el-table-column
              prop="price"
              :show-overflow-tooltip="true"
              label="价格" min-width="120">
            </el-table-column>
            <el-table-column
              prop="valid_type"
              :show-overflow-tooltip="true"
              label="有效类型"
              min-width="150">
              <template slot-scope="scope">
                {{scope.row.enabled == 1 ? '永久有效' : '临时有效'}}
              </template>
            </el-table-column>
            <el-table-column
              prop="is_default"
              :show-overflow-tooltip="true"
              label="默认商铺"
              min-width="150">
              <template slot-scope="scope">
                {{scope.row.enabled == 1 ? '默认' : '非默认'}}
              </template>
            </el-table-column>
            <el-table-column
              prop="sku"
              :show-overflow-tooltip="true"
              label="产品编码"  min-width="150">
            </el-table-column>
            <el-table-column
              prop="bar_code"
              :show-overflow-tooltip="true"
              label="条码"  min-width="120">
            </el-table-column>

            <el-table-column
              fixed="right"
              algin="center"
              label="操作"
              min-width="180">
              <template slot-scope="scope">
                <el-button
                  @click.native.prevent="viewRow(scope.row)"
                  type="text"
                  size="small">
                  查看
                </el-button>
                <el-button
                  @click.native.prevent="editRow(scope.row)"
                  type="text"
                  size="small">
                  编辑
                </el-button>
                <el-button v-if="scope.row.enabled == 0" type="text" size="small" @click.native.prevent="deleteRow(scope.row,1)">启用</el-button>
                <el-button v-if="scope.row.enabled == 1" style="color:red" type="text" size="small" @click.native.prevent="deleteRow(scope.row,0)">停用</el-button>
              </template>
            </el-table-column>
          </el-table>
          <el-pagination
            :page-sizes="[10, 20, 30, 40, 50]"
            :page-size="pageSize"
            :current-page.sync="currentPage"
            :total="total"
            background
            layout="prev, pager, next, total, sizes"
            @current-change="pagination"
            @size-change="handleSizeChange"/>
        </div>
      </el-col>
    </el-row>
    <el-dialog title="商铺选择" :visible.sync="fieldChoice" v-if="fieldChoice" width="70%" height="70%"  top="3%"
               :close-on-click-modal="false" :append-to-body="true">
      <Shops v-on:fieldData="fieldData" :mall="formInline.mall_id"></Shops>
    </el-dialog>
    <el-dialog :title="name" :visible.sync="commodityChoice" v-if="commodityChoice" width="70%" height="70%" top="3%"
               :close-on-click-modal="false" :append-to-body="true">
      <commodity v-on:commodityData="commodityData"  :mall="formInline.mall_id" :commdityType="commdityType" :productId="checkData.product_id"></commodity>
    </el-dialog>
  </div>
</template>

<script>
  import { common } from '@/common/common';
  import Shops from '@/components/order/shops.vue' //商铺
  import commodity from '@/components/sale/shops/commodity.vue' //商品
  var data = {};
  export default {
    name: 'commodityManagement',
    components: {
      Shops,commodity
    },
    data() {
      return {
        formInline:{
          mall_id:'',
          floor_id:'',
        },
        filterText: '',
        isShow: false, // 品类信息是否显示
        dataTree: [], // 树状图显示数据
        defaultProps: {
          children: 'children',
          label: 'text'
        },
        fieldChoice:false,
        tableHeight: window.innerHeight - 270,//表格高度
        tableData: [],
        total: 0,//分页总数据
        currentPage: 1,//当前页码
        pageSize: 20,//当前页码
        checkData: {},
        payModeId:'',//弹出层 新增-查看-编辑支付方式
        payModeType:'',
        payModeName:'',
        loading: false,
        addFalse: true,
        commodityChoice:false,//新增商品
        commdityType:'',
        commdityId:'',
        name:'',
      };
    },
    watch: {
      filterText(val) {
        this.$refs.tree2.filter(val);
      }
    },
    created() {
      this.loading = true;
      const list = common.get('getMallTree');
      if (list != null) {
        this.dataTree = list;
        this.loading = false;
      } else {
        this.getCategoryTree(); // 获取树状图数据
      }
    },
    methods: {
      onSecher() {
        this.rendering(this.currentPage, this.pageSize)
      },
      rendering(page, limit) {
        data = this.formInline;
        data.page = page;
        data.limit = limit;
        common.getPreData(data, 'StoreGoods/getStoreGoodsLists', this);
      },
      pagination(val) {// 列表分页
        this.currentPage = val;
        this.rendering(val, this.pageSize)
      },
      handleSizeChange(val) {// 列表分页
        this.pageSize = val;
        this.rendering(this.currentPage, val)
      },
      clickRow(row) {//选择当前行
        this.$refs.multipleTable.toggleRowSelection(row);
        this.checkData = row;
      },
      changFun(row) {//获取当前行数据
        common.radioBtn(row, this.$refs.multipleTable, this, 2)
      },
      fieldClick() {
        //场地点击
        if (!this.formInline.mall_id) {
          this.$message({
            message: '请选择门店',
            type: 'warning'
          })
        } else {
          if (!this.formInline.store_id) {
            this.fieldChoice = true
          } else {
            this.formInline.store_id = ''
            this.formInline.store_name = ''
            this.$nextTick(() => {
              this.$refs.getPayWayChang.blur()
            })
          }
        }
      },
      fieldData(data) {//场地赋值
        if (data.length == undefined) {
          this.formInline.store_name = data.store_name
          this.formInline.store_id = data.store_id
        } else {
          let store_id = '', store_name = ''
          data.forEach((index, i) => {
            if (i != data.length - 1) {
              store_id += index.store_id + ','
              store_name += index.store_name + ','
            } else {
              store_id += index.store_id
              store_name += index.store_name
            }
            this.formInline.store_name = store_name
            this.formInline.store_id = store_id
          })
        }
        this.fieldChoice = false
      },
      filterNode(value, data) {
        if (!value) return true;
        return data.text.indexOf(value) !== -1;
      },
      handleNodeClick(data, node) { // 点击传参给品类信息子组件，并显示品类信息
        if(node.childNodes.length != 0) { //楼层ID
          this.formInline.floor_id ='';
          this.formInline.mall_id = data.id; //门店ID
        }else {
          this.formInline.floor_id = data.id; //门店ID
          const mallId = common.get('getMallTree');
          for(let i in mallId) {
            if(mallId[i].children.length != 0) {
              for(let j in mallId[i].children) {
                if(mallId[i].children[j].id == data.id) {
                  this.formInline.mall_id = mallId[i].id; //门店ID
                }
              }
            }
          }
        }
        this.addFalse = false;
        this.onSecher();
      },
      getCategoryTree() { // 获取树状图数据
        common.getTree('StoreGoods/getMallTree', this, 'getMallTree');
      },
      //新增商铺
      addCommodity(){
        this.commodityType(3, '新增商品');
      },
      //新增默认商铺
      addDefault(){
        let that = this;
        let data = {
          mall_id: this.formInline.mall_id,
        }
        this.$confirm('是否新增默认商品', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning',
          center: true
        }).then(() => {
          that.http
            .post('StoreGoods/proDefaultGoods', data)
            .then((res) => {
                that.$message({
                  type: 'success',
                  message: '成功!'
                });
                that.onSecher();
            })
            .catch((err) => {
              that.$message.error(err.response.data.msg);
            });
        }).catch(() => {
          this.$message({
            type: 'info',
            message: '已取消'
          });
        })
      },
      //导入
      importCommodity(){},
      viewRow(row) {
        this.commodityType(1, '查看商品');
      },
      editRow(row) {
        this.commodityType(2, '编辑商品');
      },
      deleteRow(row,type) {
        let title='';
        if(type == 1) {
          title = '是否启用此商品';
        }else {
          title = '是否停用此商品';
        }
        common.del(title, 'StoreGoods/modifiyStateStoreProduct', { product_id: row.product_id , type:type}, 'StoreGoods/getStoreGoodsLists', this);
      },
      commodityType(type, name) {
        this.commodityChoice = true;
        this.commdityType = type; // 1查看 2编辑 3新增
        this.name = name; // 1查看 2编辑 3新增
      },
      commodityData(data) {
        console.log(data)
        this.commodityChoice = data;
        this.onSecher();
      },
    }
  };
</script>
<style rel="stylesheet/scss" lang="scss" scoped>
  @import "../../../font/iconfont.css";
  #app {
    font-family: 'Avenir', Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-align: center;
    color: #666;
  }
  .category-tree-content{margin:10px;border: 1px solid #e2e2e2;height: calc(100vh - 10vh);
  .category-text{background: #f7f7f7;line-height: 40px;font-size: 14px;color: #606266;padding: 0 15px;box-sizing: border-box;font-weight: bold;}
  }
  .filter-tree{overflow: auto;height:calc(100vh - 15vh);}
  .addCategory{
    color: #38f;
    float:right;
    cursor:pointer;
    padding: 0 15px;
  }
  .el-tree--highlight-current .el-tree-node.is-current>.el-tree-node__content{
    background-color: #6eb4fd !important;
  }
</style>


