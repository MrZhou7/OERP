<template>
  <div id="businessWrap">
    <div class="businessWrapTitle">商戶管理</div>
    <el-form :model="formInline" class="demo-form-inline" label-width="80px">
      <el-row>
        <el-col :span="6">
          <el-form-item label="商户编号">
            <el-input v-model="formInline.customer_code" clearable placeholder="请输入商户编号"></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="6">
          <el-form-item label="商户名称">
            <el-input v-model="formInline.customer_name" clearable placeholder="请输入商户名称"></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="6">
          <el-form-item label="商户状态">
            <el-select v-model="formInline.enabled" clearable placeholder="请选择商户状态">
              <el-option label="无效" :value="0"></el-option>
              <el-option label="有效" :value="1"></el-option>
            </el-select>
          </el-form-item>
        </el-col>
        <el-col :span="6">
          <el-form-item>
            <el-button type="primary" @click="inquireSite">搜索</el-button>
          </el-form-item>
        </el-col>
      </el-row>
      <div class="demo-input-size">
        <el-form-item>
          <el-button type="primary" @click="addBusiness">新增商户</el-button>
        </el-form-item>
      </div>
    </el-form>
    <el-table
      :data="tableData"
      style="width: 100%;"
      border
      :height="tableHeight">
      <el-table-column
        type="selection"
        width="55">
      </el-table-column>
      <el-table-column
        fixed
        prop="customer_code"
        label="商户编号"
        width="150">
      </el-table-column>
      <el-table-column
        prop="customer_name"
        label="商户名称"
        width="150">
      </el-table-column>
      <el-table-column
        prop="cust_short_name"
        label="商户简称"
        width="150">
      </el-table-column>
      <el-table-column
        prop="contact_phone"
        label="手机号"
        width="150">
      </el-table-column>
      <el-table-column
        prop="legal"
        label="法人"
        width="150">
      </el-table-column>
      <el-table-column
        prop="customer_rank"
        label="商户级别"
        width="150">
        <template slot-scope="scope">
          <span v-for="(item, index) in customerRank" :key="index">
            {{ scope.row.customer_rank == item.values_code ? item.values_name : '' }}
          </span>
        </template>
      </el-table-column>
      <el-table-column
        prop="busunessAddress[0]"
        label="省份"
        width="120">
        <template slot-scope="scope">
          <span v-for="(item, index) in cityData" :key="index">
            {{ scope.row.busunessAddress[0] == item.id ? item.text : '' }}
          </span>
        </template>
      </el-table-column>
      <el-table-column
        prop="busunessAddress[1]"
        label="地区市"
        width="120">
        <template slot-scope="scope">
          <span v-for="(item, index) in cityData" :key="index" v-if="scope.row.busunessAddress[0] == item.id">
            <span v-for="(title, index) in item.children" :key="index">
              {{ scope.row.busunessAddress[1] == title.id ? title.text : '' }}
            </span>
          </span>
        </template>
      </el-table-column>
      <el-table-column
        prop="busunessAddress[2]"
        label="县区市"
        width="120">
        <template slot-scope="scope">
          <span v-for="(item, index) in cityData" :key="index" v-if="scope.row.busunessAddress[0] == item.id">
            <span v-for="(title, index) in item.children" :key="index">
              <span v-for="(text, index) in title.children" :key="index">
                {{ scope.row.busunessAddress[2] == text.id ? text.text : '' }}
              </span>
            </span>
          </span>
        </template>
      </el-table-column>
      <el-table-column
        prop="address"
        label="详细地址"
        width="300">
      </el-table-column>
      <el-table-column
        prop="enabled"
        label="是否有效"
        width="150">
        <template slot-scope="scope">
          {{ scope.row.enabled == 0 ?"无效":"有效" }}
        </template>
      </el-table-column>
      <el-table-column
        fixed="right"
        label="操作"
        width="200">
        <template slot-scope="scope">
          <el-button @click.native.prevent="checkBusiness(scope.$index, tableData)" type="text" size="small">查看</el-button>
          <el-button type="text" size="small" @click.native.prevent="editClick(scope.$index, tableData)">编辑</el-button>
          <el-button
            @click.native.prevent="deleteRow(scope.$index, tableData)"
            type="text"
            v-if="scope.row.enabled == 1"
            size="small">
            作废
          </el-button>
          <el-button
            v-if="scope.row.enabled == 0"
            @click.native.prevent="startRow(scope.$index, tableData)"
            type="text"
            size="small">
            启用
          </el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      background
      layout="prev, pager, next"
      @current-change="pageinations"
      :total="total">
    </el-pagination>
    <el-dialog
      :title="editTitle"
      :close-on-click-modal="false"
      :visible.sync="dialogVisibleToo"
      width="90%">
      <EditBusiness :editData="editData" :checkBool="checkBool" @through="through"></EditBusiness>
      <span slot="footer" class="dialog-footer">
        <el-button @click="dialogVisibleToo = false">取 消</el-button>
      </span>
    </el-dialog>
    <el-dialog
      title="新增商户"
      :close-on-click-modal="false"
      :visible.sync="dialogVisible"
      width="90%">
      <AddBusiness @success="success"></AddBusiness>

    </el-dialog>
  </div>
</template>

<script>
var data = {};
import AddBusiness from '@/components/business/addBusiness';
import EditBusiness from '@/components/business/editBusiness';
import { common } from '@/common/common';
export default {
  name: 'BusinessManage',
  components: { AddBusiness, EditBusiness },
  data() {
    return {
      editTitle: '', // 弹窗的title
      cityData: [], // 请求本地的城市文件
      customerRank: [], // 商戶級別信息
      dialogVisible: false, // 新增商户弹窗
      formInline: {
        customer_code: '',
        customer_name: '',
        enabled: null
      },
      total: 0, // 分页
      tableHeight: window.innerHeight - 329,
      tableData: [], // 查询获取的数据
      dialogVisibleToo: false, // 编辑弹窗隐藏
      checkBool: false, // 查看商户信息时传递数据
      editData: {} // 获取当前笔记的商户信息
    };
  },
  created() {
    this.getCityData();
    /*const searchHistory = common.get('businessSearch');
    console.log(searchHistory)
    if (searchHistory != null) {
      this.formInline = searchHistory.search;
      common.getPreData(searchHistory.search, "customer/getCustomerList", this)
    }*/
  },
  methods: {
    inquireSite() { // 搜索
      let data = this.formInline;
      common.getPreData(data, 'customer/getCustomerList', this);
      //common.set('businessSearch',{'search': data});
    },
    pageinations(val) { // 分页
      data = this.formInline;
      data.page = val;
      data.limit = 10;
      common.getPreData(data, 'customer/getCustomerList', this);
      //common.set('businessSearch',{'search': data});
    },
    addBusiness: function() { // 新增商户
      this.dialogVisible = true;
    },
    success(data) { // 接受子组件参数，关闭弹窗
      this.dialogVisible = data;
    },
    editClick(index, table) { // 编辑
      this.editData = table[index];
      this.dialogVisibleToo = true;
      this.editTitle = '编辑商户信息';
      this.checkBool = false;
    },
    checkBusiness(index, table) { // 查看商户信息
      this.editData = table[index];
      this.dialogVisibleToo = true;
      this.editTitle = '查看商户信息';
      this.checkBool = true;
    },
    deleteRow(index, row) { // 作废
      common.del('此操作将作废该商户是否继续', 'customer/delCustomer', { customer_id: row[index].customer_id, enabled: 0 }, 'customer/getCustomerList', this)
    },
    startRow(index, row) { // 启用
      common.del('此操作将作废该商户是否继续', 'customer/delCustomer', { customer_id: row[index].customer_id, enabled: 1 }, 'customer/getCustomerList', this)
    },
    through(data) { // 接受子组件传值
      this.dialogVisibleToo = data;
    },
    getCityData() { // 獲取本地city信息
      this.axios.post(process.env.BASE_CITY).then((res) => {
        this.cityData = res.data;
      });
      common.lookup('L020', this).then((res) => {
        this.customerRank = res;
        console.log(this.customerRank);
      });
    }
    }
}
</script>

<style scoped lang="scss">
  #businessWrap{
    padding: 15px;
    .businessWrapTitle{
      position: relative;
      height: 42px;
      line-height: 42px;
      padding: 0 15px;
      border-bottom: 1px solid #f6f6f6;
      color: #333;
      border-radius: 2px 2px 0 0;
      font-size: 14px;
    }
  }
</style>
